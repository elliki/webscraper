package io.github.elli.controller;
import io.github.elli.models.WebsiteData;
import io.github.elli.repository.WebsiteContent;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)
public class MainController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private WebsiteContent.WebsiteContentRepository websiteContentRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewWebsiteData (@RequestParam String header
            , @RequestParam String paragraph, @RequestParam String image) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        WebsiteData n = new WebsiteData();
        n.setHeader(header);
        n.setParagraph(paragraph);
        n.setImage(image);
        websiteContentRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<WebsiteData> getAllWebsiteData() {
        // This returns a JSON or XML with the users
        return websiteContentRepository.findAll();
    }
}